import React, {Component} from 'react'
import Highcharts from 'highcharts'
import {connect} from 'react-redux'

class VulnerabilitySummary extends Component {

  componentWillReceiveProps(nextProps) {
    const findingsSummary = nextProps.findingsSummary;
    if (findingsSummary) {
      var severityCount = findingsSummary.severityCount;
      var data = [];
      data.push({name: 'Critical', y: severityCount.criticalCount});
      data.push({name: 'High', y: severityCount.highCount});
      data.push({name: 'Medium', y: severityCount.mediumCount});
      data.push({name: 'Low', y: severityCount.lowCount});
      data.push({name: 'Info', y: severityCount.infoCount});

      Highcharts.chart('pieChart', {
        colors: [
          'rgb(255, 77, 77)',
          'rgb(255, 112, 77)',
          'rgb(247, 163, 92)',
          'rgb(124, 181, 236)',
          'rgb(144, 237, 125)',
        ],
        chart: {
          type: 'pie'
        },
        exporting: {
          enabled: true
        },
        title: {
          text: 'Vulnerability Count'
        },
        tooltip: {
          pointFormat: '{series.name}: <b>{point.y:.0f}</b>'
        },
        plotOptions: {
          pie: {
            allowPointSelect: true,
            cursor: 'pointer',
            dataLabels: {
              enabled: false,
              format: '<b>{point.name}</b>: {point.y:.0f}',
              style: {
                color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
              }
            },
            showInLegend: false
          }
        },
        credits: {
          enabled: false
        },
        series: [
          {
            name: 'Total',
            colorByPoint: true,
            data: data,
          }
        ],
      });
    }
  }
  render() {
    return (
      <div id="pieChart"></div>
    );
  }
}
const mapStateToProps = (state) => ({findingsSummary: state.findings.findingsSummary});
export default connect(mapStateToProps)(VulnerabilitySummary);
